#
# Content Security Policy.
#

# Disable unsafe inline/eval, only allow loading of resources (images, fonts, scripts, etc.) over HTTPS.
# Note that this does not provide any XSS protection.
# add_header  Content-Security-Policy  "default-src https:";

# Disable unsafe inline/eval and plugins, only load scripts and stylesheets from same origin, fonts from google,
# and images from same origin and imgur. Sites should aim for policies like this.
# add_header  Content-Security-Policy  "default-src 'none'; font-src https://fonts.gstatic.com; img-src 'self' https://i.imgur.com; object-src 'none'; script-src 'self'; style-src 'self'";

# Disable the loading of any resources and disable framing, recommended for APIs to use.
# add_header  Content-Security-Policy  "default-src 'none'; frame-ancestors 'none'";

# Sample safe policy, generated by CSP Evaluator.
# add_header  Content-Security-Policy  "script-src 'strict-dynamic' 'nonce-rAnd0m123' 'unsafe-inline' http: https:; object-src 'none'; base-uri 'none'; require-trusted-types-for 'script'; report-uri https://csp.example.com;";

# Mozilla demo page.
# add_header  Content-Security-Policy  "default-src 'none'; connect-src 'self'; font-src https://fonts.gstatic.com; img-src 'self' data: blob:; script-src 'self' 'sha256-4qKuKHlhZHVtOHkzV6IoRxvJyftFsU9Bzug8piLac2s=' 'sha256-wFlxiON/IU9ZZ5PD6RqOAhUMQtTTYSO6Fh/5V470Tdo='; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; frame-ancestors 'none'; base-uri 'none'; form-action 'self'; manifest-src 'self'; prefetch-src 'self'";

# Twitter's case study.
# add_header  Content-Security-Policy  "default-src 'self'; connect-src 'self' https://*.twitter.com https://s1259914507.t.eloqua.com https://www.google-analytics.com; font-src 'self' https://*.twimg.com https://*.twitter.com data:; frame-src 'self' https://twitter.com https://*.twitter.com; img-src 'self' https://*.twimg.com https://*.twitter.com https://www.google-analytics.com https://cdn.cms-twdigitalassets.com data:; media-src 'self' https://*.twimg.com https://*.twitter.com https://cdn.cms-twdigitalassets.com; object-src 'self'; script-src 'self' 'sha256-ppW1Vv+qSVcs+/pIj1ZXvMiCLoyHyCdRqtDMeK9fQ9w=' https://cdn.syndication.twimg.com https://*.twitter.com https://static.ads-twitter.com 'nonce-aa5b3c154f4b95a255ab58f65de795f'; style-src 'self' 'unsafe-inline' https://*.twimg.com https://*.twitter.com; report-uri https://twitter.com/i/csp_report; frame-ancestors 'self'";

# Our site usage based on the CSP Level 3.
add_header  Content-Security-Policy  "default-src 'none'; script-src 'strict-dynamic' 'nonce-$request_id' 'sha256-kaiAGGSivoQbPJgLiGk8ipdi9P3JiN9LQFYh9yYLHm4=' 'sha256-GmJfKcv5tXSbjP898ui6EbtNiRBE9wUgILINrQbFoBc=' 'unsafe-inline' https:; style-src 'self'; img-src 'self'; font-src 'self'; media-src 'self'; connect-src 'self'; frame-src 'self'; child-src 'self'; worker-src 'self'; manifest-src 'self'; prefetch-src 'self'; object-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none'; require-trusted-types-for 'script'; upgrade-insecure-requests; report-uri /api/security/reports/; report-to default"  always;
# This header was not sent but frame-ancestors in Content Security Policy was used instead.
add_header  X-Frame-Options          "DENY"  always;

#
# Cross-Site Scripting.
#

# Block pages from loading when they detect reflected XSS attacks.
add_header  X-XSS-Protection  "1; mode=block; report=/api/security/reports/"  always;

#
# Other stuff.
#

# This header defines a mechanism that allows developers to selectively enable and disable use of various browser features and APIs.
add_header  Permissions-Policy  "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
